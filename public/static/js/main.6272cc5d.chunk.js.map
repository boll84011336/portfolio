{"version":3,"sources":["Todo.js","App.js","useTodos.js","index.js"],"names":["Button","styled","button","ButtonWrapper","div","TodoItem","TodoContent","props","$isDone","EditInput","input","Todo","todo","onDelete","onUpdate","useState","isEditing","setIsEditing","inputRef","useRef","handleDeleteCLick","useCallback","id","handleToggleStatusClick","isDone","handleDoubleClick","handleKeyDown","e","key","target","value","content","ref","onKeyDown","onDoubleClick","onClick","memo","Title","h1","InputWrapper","Input","$isActive","TodoList","FilterList","App","todos","setTodos","filter","setFilter","setValue","addTodo","current","deleteTodo","updateTodo","newTodo","map","updateFilter","newFilter","handleChange","clearTodos","useMemo","useTodos","placeholder","onChange","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6272cc5d.chunk.js","sourcesContent":["import React, { useCallback, memo, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  font-size: 16px;\n  background: rgba(0, 0, 70, 0.3);\n`;\n\nconst ButtonWrapper = styled.div`\n  opacity: 0;\n  transition: opacity 0.1s ease-in;\n`;\n\nconst TodoItem = styled.div`\n  padding: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  &:hover ${ButtonWrapper} {\n    opacity: 1;\n  }\n\n  & + & {\n    border-top: 1px solid #ccc;\n  }\n`;\n\nconst TodoContent = styled.div`\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n    opacity: 0.5;\n  `}\n`;\n\nconst EditInput = styled.input`\n  font-size: 16px;\n  padding: 4px;\n`;\n\nfunction Todo({ todo, onDelete, onUpdate }) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 對於編輯 input 我採用 uncontrolled component，避免更新狀態\n  // 這樣比較方便一點\n  const inputRef = useRef();\n\n  const handleDeleteCLick = useCallback(() => {\n    onDelete(todo.id);\n  }, [onDelete, todo]);\n\n  const handleToggleStatusClick = useCallback(() => {\n    onUpdate({\n      ...todo,\n      isDone: !todo.isDone\n    });\n  }, [todo, onUpdate]);\n\n  const handleDoubleClick = useCallback(() => {\n    setIsEditing(true);\n  }, []);\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      if (e.key !== \"Enter\") return;\n\n      // 如果是空的代表取消 update\n      if (!e.target.value) {\n        return setIsEditing(false);\n      }\n      onUpdate({\n        ...todo,\n        content: e.target.value\n      });\n      setIsEditing(false);\n    },\n    [onUpdate, todo]\n  );\n\n  return (\n    <TodoItem>\n      {isEditing ? (\n        <EditInput ref={inputRef} onKeyDown={handleKeyDown} />\n      ) : (\n        <TodoContent onDoubleClick={handleDoubleClick} $isDone={todo.isDone}>\n          {todo.content}\n        </TodoContent>\n      )}\n      <ButtonWrapper>\n        <Button onClick={handleToggleStatusClick}>\n          {todo.isDone ? \"未完成\" : \"已完成\"}\n        </Button>\n        <Button onClick={handleDeleteCLick}>刪除</Button>\n      </ButtonWrapper>\n    </TodoItem>\n  );\n}\n\nexport default memo(Todo);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useTodos from \"./useTodos\";\nimport Todo from \"./Todo\";\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  font-size: 16px;\n  padding: 4px;\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  background: ${(props) =>\n    props.$isActive ? \"rgba(70, 0, 0, 0.3)\" : \"rgba(0, 0, 70, 0.3)\"};\n`;\n\nconst TodoList = styled.div`\n  border: 1px solid #ccc;\n  border-radius: 16px;\n  margin-top: 16px;\n`;\n\nconst FilterList = styled.div`\n  display: flex;\n  margin-top: 24px;\n`;\n\nexport default function App() {\n  const {\n    todos,\n    value,\n    filter,\n\n    addTodo,\n    deleteTodo,\n    updateTodo,\n    clearTodos,\n    handleChange,\n    updateFilter\n  } = useTodos();\n\n  return (\n    <div>\n      <Title>Todo List(雙擊 todo 可編輯)</Title>\n      <InputWrapper>\n        <Input placeholder=\"todo\" value={value} onChange={handleChange} />\n        <Button onClick={addTodo}>新增</Button>\n      </InputWrapper>\n      <FilterList>\n        <Button\n          onClick={() => updateFilter(\"all\")}\n          $isActive={filter === \"all\"}\n        >\n          全部\n        </Button>\n        <Button\n          onClick={() => updateFilter(\"undone\")}\n          $isActive={filter === \"undone\"}\n        >\n          未完成\n        </Button>\n        <Button\n          onClick={() => updateFilter(\"done\")}\n          $isActive={filter === \"done\"}\n        >\n          已完成\n        </Button>\n        <Button onClick={clearTodos}>清空</Button>\n      </FilterList>\n      <TodoList>\n        {todos.map((todo) => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            onDelete={deleteTodo}\n            onUpdate={updateTodo}\n          />\n        ))}\n      </TodoList>\n    </div>\n  );\n}","import { useState, useRef, useCallback, useMemo } from \"react\";\n\nexport default function useTodos() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      content: \"Hello\",\n      isDone: false\n    }\n  ]);\n  const [filter, setFilter] = useState(\"all\");\n  const [value, setValue] = useState(\"\");\n  const id = useRef(2);\n\n  const addTodo = useCallback(() => {\n    if (!value) return;\n    setTodos([\n      ...todos,\n      {\n        id: id.current++,\n        content: value,\n        isDone: false\n      }\n    ]);\n    setValue(\"\");\n  }, [value, todos]);\n\n  const deleteTodo = useCallback(\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n    },\n    [todos]\n  );\n\n  const updateTodo = useCallback(\n    (newTodo) => {\n      setTodos(todos.map((todo) => (todo.id === newTodo.id ? newTodo : todo)));\n    },\n    [todos]\n  );\n\n  const updateFilter = useCallback((newFilter) => {\n    setFilter(newFilter);\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  const clearTodos = useCallback(() => {\n    setTodos([]);\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter((todo) => {\n      if (filter === \"all\") return true;\n      return filter === \"undone\" ? !todo.isDone : todo.isDone;\n    });\n  }, [todos, filter]);\n\n  return {\n    todos: filteredTodos,\n    value,\n    filter,\n\n    addTodo,\n    deleteTodo,\n    updateTodo,\n    clearTodos,\n    updateFilter,\n    handleChange\n  };\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}